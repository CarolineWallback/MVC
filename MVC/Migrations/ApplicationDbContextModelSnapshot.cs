// <auto-generated />
using System;
using MVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVC.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LanguagePerson", b =>
                {
                    b.Property<int>("LanguagesLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("PeopleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LanguagesLanguageId", "PeopleId");

                    b.HasIndex("PeopleId");

                    b.ToTable("LanguagePerson");

                    b.HasData(
                        new
                        {
                            LanguagesLanguageId = 1,
                            PeopleId = "31e695e3-c37e-498d-bb36-3162545370a6"
                        },
                        new
                        {
                            LanguagesLanguageId = 1,
                            PeopleId = "b4e75096-6520-4d24-aebb-303258213299"
                        },
                        new
                        {
                            LanguagesLanguageId = 1,
                            PeopleId = "d435d9e3-3ade-4e1a-a15d-2452c68cab42"
                        },
                        new
                        {
                            LanguagesLanguageId = 2,
                            PeopleId = "31e695e3-c37e-498d-bb36-3162545370a6"
                        },
                        new
                        {
                            LanguagesLanguageId = 2,
                            PeopleId = "d435d9e3-3ade-4e1a-a15d-2452c68cab42"
                        },
                        new
                        {
                            LanguagesLanguageId = 3,
                            PeopleId = "b4e75096-6520-4d24-aebb-303258213299"
                        });
                });

            modelBuilder.Entity("MVC.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.HasKey("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityId = -1,
                            CityName = ""
                        },
                        new
                        {
                            CityId = 1,
                            CityName = "Gothenburg",
                            CountryId = 1
                        },
                        new
                        {
                            CityId = 2,
                            CityName = "Karlstad",
                            CountryId = 1
                        },
                        new
                        {
                            CityId = 3,
                            CityName = "Barcelona",
                            CountryId = 2
                        },
                        new
                        {
                            CityId = 4,
                            CityName = "Malaga",
                            CountryId = 2
                        },
                        new
                        {
                            CityId = 5,
                            CityName = "Bangkok",
                            CountryId = 3
                        },
                        new
                        {
                            CityId = 6,
                            CityName = "Rayong",
                            CountryId = 3
                        });
                });

            modelBuilder.Entity("MVC.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            CountryName = "Sweden"
                        },
                        new
                        {
                            CountryId = 2,
                            CountryName = "Spain"
                        },
                        new
                        {
                            CountryId = 3,
                            CountryName = "Thailand"
                        });
                });

            modelBuilder.Entity("MVC.Models.Language", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguageId"));

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguageId");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            LanguageId = 1,
                            LanguageName = "English"
                        },
                        new
                        {
                            LanguageId = 2,
                            LanguageName = "Swedish"
                        },
                        new
                        {
                            LanguageId = 3,
                            LanguageName = "Spanish"
                        },
                        new
                        {
                            LanguageId = 4,
                            LanguageName = "Thai"
                        });
                });

            modelBuilder.Entity("MVC.Models.Person", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = "31e695e3-c37e-498d-bb36-3162545370a6",
                            CityId = 1,
                            Name = "Hilda",
                            PhoneNumber = "0756845297"
                        },
                        new
                        {
                            Id = "b4e75096-6520-4d24-aebb-303258213299",
                            CityId = 3,
                            Name = "Alberto",
                            PhoneNumber = "0735648701"
                        },
                        new
                        {
                            Id = "d435d9e3-3ade-4e1a-a15d-2452c68cab42",
                            CityId = 3,
                            Name = "Gun",
                            PhoneNumber = "0765487028"
                        });
                });

            modelBuilder.Entity("LanguagePerson", b =>
                {
                    b.HasOne("MVC.Models.Language", null)
                        .WithMany()
                        .HasForeignKey("LanguagesLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MVC.Models.City", b =>
                {
                    b.HasOne("MVC.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("MVC.Models.Person", b =>
                {
                    b.HasOne("MVC.Models.City", "City")
                        .WithMany("People")
                        .HasForeignKey("CityId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("MVC.Models.City", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("MVC.Models.Country", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
